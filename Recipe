#!/usr/bin/env bash

set -e # Exit on errors
set -x # Be verbose

##########################################################################
# GET DEPENDENCIES
##########################################################################

apt_packages_basic=(
  automake
  autotools-dev
  boost1.67
  ca-certificates
  cimg-dev
  cmake
  curl
  desktop-file-utils
  file
  fuse
  gcc
  g++
  git
  libcairo2-dev
  libfuse-dev
  libglib2.0-dev
  libjpeg-dev
  libpng-dev
  libssl-dev
  libtool
  make
  patch
  patchelf
  pkg-config
  wget
  xxd
  )

apt-get update
apt-get install -y --no-install-recommends \
  "${apt_packages_basic[@]}"

cd /

##########################################################################
# Compile and install nlohmann-json
##########################################################################

git clone https://github.com/nlohmann/json
cd json/
git submodule update --init --recursive
git checkout v3.10.4
mkdir -p build
cd build
cmake -DBUILD_TESTING=OFF ..
cmake --build . -j $(nproc)
cmake --build . --target install
cd /

##########################################################################
# Compile and install linuxdeploy
##########################################################################

git clone https://github.com/linuxdeploy/linuxdeploy
cd linuxdeploy/
git submodule update --init --recursive
git checkout 1-alpha-20220822-1
mkdir -p build
cd build
cmake -DBUILD_TESTING=OFF ..
cmake --build . -j $(nproc)
mv /linuxdeploy/build/bin /tools
export PATH=/tools:$PATH
linuxdeploy --version
cd /

##########################################################################
# Compile and install linuxdeploy-plugin-qt
##########################################################################

git clone https://github.com/linuxdeploy/linuxdeploy-plugin-qt
cd linuxdeploy-plugin-qt/
git submodule update --init --recursive
git checkout continuous
mkdir -p build
cd build
cmake -DBUILD_TESTING=OFF ..
cmake --build . -j $(nproc)
cmake --build . --target install
mv /linuxdeploy-plugin-qt/build/bin/linuxdeploy-plugin-qt /tools/linuxdeploy-plugin-qt
linuxdeploy --list-plugins
cd /

##########################################################################
# Compile and install linuxdeploy-plugin-appimage
##########################################################################

git clone https://github.com/linuxdeploy/linuxdeploy-plugin-appimage
cd linuxdeploy-plugin-appimage/
git submodule update --init --recursive
git checkout continuous
mkdir -p build
cd build
cmake -DBUILD_TESTING=OFF ..
cmake --build . -j $(nproc)
cmake --build . --target install
mv /usr/local/bin/linuxdeploy-plugin-appimage /tools/linuxdeploy-plugin-appimage
cd /
linuxdeploy --list-plugins


##########################################################################
# Compile and install AppImageKit
##########################################################################

git clone https://github.com/AppImage/AppImageKit
cd AppImageKit/
git submodule update --init --recursive
git checkout 13
mkdir -p build
cd build
cmake -DBUILD_TESTING=OFF ..
cmake --build . -j $(nproc)
cmake --build . --target install
cd /
appimagetool --version

##########################################################################
# Install dependencies needed for deploy step
##########################################################################

apt_packages_dep=(
 appstream
 gnupg2
 libasound2
 libegl1-mesa
 libevent-dev
 libgl1
 libportmidi0
 libpulse0
 libssl1.1
 libwebpdemux2
 libx11-xcb1
 libxcb1
 libxcb-glx0
 libxcb-keysyms1
 libxcb-icccm4
 libxcb-image0
 libxcb-randr0
 libxcb-render-util0
 libxcb-shape0
 libxcb-shm0
 libxcb-sync1
 libxcb-util0
 libxcb-xfixes0
 libxcb-xinerama0
 libxcb-xkb1
 libxcb-xtest0
 libxkbcommon-x11-0
 libxslt1-dev
 libxtables12
 openssl
 portaudio19-dev
 zsync
 )

apt-get install -y --no-install-recommends \
  "${apt_packages_dep[@]}"

# tidy up (reduce size of Docker image)
apt-get clean autoclean
apt-get autoremove --purge -y
rm -rf /tmp/* /var/{cache,log,backups}/* /var/lib/apt/*

# delete build folders
rm -rf /linuxdeploy*
rm -rf AppImageKit
rm -rf /json

echo "Recipe has finished!" >&2

